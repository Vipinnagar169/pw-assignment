Q.1 What is position property in CSS and its type?
Ans-The position property in CSS is used to specify the type of positioning for an element within its parent container. It determines how an element is positioned and how it interacts with other elements on the page. The position property can take several values, each defining a different type of positioning:

static:
This is the default value for the position property.
Elements with position: static are positioned according to the normal flow of the document.
They are not affected by the top, bottom, left, right, or z-index properties.
Example: position: static;

relative:
Elements with position: relative are positioned relative to their normal position in the document flow.
The element can be moved using the top, bottom, left, and right properties.
Nearby elements are not affected by the relative positioning of the element.
Example: position: relative;

absolute:
Elements with position: absolute are positioned relative to their closest positioned ancestor (a parent element with a position value other than static).
If there is no positioned ancestor, the element is positioned relative to the initial containing block (usually the viewport).
The element is removed from the normal document flow, and nearby elements may overlap it.
Example: position: absolute;

fixed:
Elements with position: fixed are positioned relative to the viewport (the browser window).
The element remains fixed in its position even when the page is scrolled.
Fixed elements do not affect the position of other elements.
Example: position: fixed;
sticky:

Elements with position: sticky are positioned based on the user's scroll position.
The element behaves like relative positioning until it reaches a specified threshold, at which point it becomes fixed.
Sticky elements are positioned relative to their containing block or closest ancestor with a scrolling mechanism.
Example: position: sticky;

Q.2 How many types of positioning are there in css?
Ans-there are four types of positioning available for elements:

Static Positioning:
This is the default positioning behavior for elements.
Elements with position: static are positioned according to the normal flow of the document.
They are not affected by the top, bottom, left, right, or z-index properties.
Static positioning does not introduce any new layering or positioning concepts.
Example: position: static;

Relative Positioning:
Elements with position: relative are positioned relative to their normal position in the document flow.
The element can be moved using the top, bottom, left, and right properties.
Nearby elements are not affected by the relative positioning of the element.
Example: position: relative;

Absolute Positioning:
Elements with position: absolute are positioned relative to their closest positioned ancestor (a parent element with a position value other than static).
If there is no positioned ancestor, the element is positioned relative to the initial containing block (usually the viewport).
The element is removed from the normal document flow, and nearby elements may overlap it.
Example: position: absolute;

Fixed Positioning:
Elements with position: fixed are positioned relative to the viewport (the browser window).
The element remains fixed in its position even when the page is scrolled.
Fixed elements do not affect the position of other elements.
Example: position: fixed;

Q.3 What is Z-index and why to use it?
Ans-z-index property is used to control the stacking order of elements along the z-axis (the depth axis) on a webpage. It determines which elements appear in front of or behind other elements when they overlap in the same stacking context.

The z-index property accepts integer values and determines the priority of an element's stacking order. Higher values result in elements appearing closer to the front, while lower values place elements closer to the back. Elements with the same z-index value are stacked according to their order in the HTML markup.
