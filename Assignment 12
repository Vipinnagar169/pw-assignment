Q.1 What is padding and margin and when do you use them?
Ans-padding and margin are CSS (Cascading Style Sheets) properties used to control the spacing around elements on a webpage. They are often used to adjust the layout and appearance
of elements in relation to each other and the overall design of the page.

Padding:
Padding refers to the space between the content of an element and its border. It is specified using the CSS 'padding' property. The padding adds extra space inside the border of an
element and affects its width and height. By increasing or decreasing the padding, you can control the amount of space between the content and the border of an element. 
Padding can be set independently for each side of the element (top, right, bottom, and left).

Margin:
Margin refers to the space between an element and its neighboring elements. It is specified using the CSS 'margin' property. The margin adds space outside the border of an element 
and affects the positioning of the element in relation to other elements on the page. By adjusting the margin, you can control the spacing between elements. Like padding, 
margin can also be set independently for each side of the element.

When to use padding and margin:

Padding is commonly used to create space between the content and the border of an element. It is useful when you want to add internal spacing within an element, such as adding 
space around text inside a '<div>, or adding space between the border of an image and its caption.


Margin, on the other hand, is used to control the spacing between elements on a page. It allows you to create gaps or separate elements from each other. For example, you can use
margin to create space between paragraphs, vertically align elements within a container, or position elements in specific locations on the page.

Q.2 What is display property and explain display inline ,block and inline-block?
Ans-The display property is used to control the layout behavior of an element. It specifies how an element should be rendered on the webpage and how it interacts with other 
elements.

display: inline:

Elements with display: inline are rendered inline within the text flow, similar to a piece of text. They do not start on a new line and only take up the space they need.
Examples of elements with display: inline are <span>, <a>, <strong>, and <em>.
By default, display: inline elements do not have width or height properties, and margins and padding only affect the left and right sides, not the top and bottom.

display: block:

Elements with display: block are rendered as block-level elements. They start on a new line and take up the full width available by default.
Examples of elements with display: block are <div>, <p>, <h1> to <h6>, and <section>.
Block-level elements can have width and height properties, and margins, padding, and borders affect all sides.

display: inline-block:

Elements with display: inline-block are rendered inline, but they also have the characteristics of a block-level element. They can flow within the text but can have width, 
height, margins, padding, and borders applied to them.
display: inline-block is useful when you want elements to have block-level properties but still flow inline with other elements.
Examples of elements with display: inline-block can be <img>, <button>, or custom elements.

Q.3 Explain min-height,min-width,max-height and max-width in css?
Ans- the properties min-height, min-width, max-height, and max-width are used to define constraints on the size of elements. These properties allow you to set minimum and 
maximum dimensions for elements, ensuring they remain within a specific range.

min-height:

The min-height property sets the minimum height that an element can have. It ensures that the element's height is never smaller than the specified value.
If the content inside the element requires more space than the min-height, the element will expand to accommodate the content.
If the content is smaller than the min-height, the element's height will adjust accordingly.
Example: min-height: 200px;
min-width:

The min-width property sets the minimum width that an element can have. It ensures that the element's width is never smaller than the specified value.
If the content inside the element requires more space than the min-width, the element will expand to accommodate the content.
If the content is smaller than the min-width, the element's width will adjust accordingly.
Example: min-width: 300px;
max-height:

The max-height property sets the maximum height that an element can have. It ensures that the element's height is never larger than the specified value.
If the content inside the element requires less space than the max-height, the element's height will adjust accordingly.
If the content is larger than the max-height, the element will overflow and might require additional scrolling or other techniques to display the excess content.
Example: max-height: 500px;
max-width:

The max-width property sets the maximum width that an element can have. It ensures that the element's width is never larger than the specified value.
If the content inside the element requires less space than the max-width, the element's width will adjust accordingly.
If the content is larger than the max-width, the element will overflow, and similar to max-height, additional scrolling or other techniques may be necessary.
Example: max-width: 800px;
